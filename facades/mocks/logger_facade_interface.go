// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	facades "github.com/Snooker-IO/snooker-pkg/facades"
	mock "github.com/stretchr/testify/mock"
)

// LoggerFacadeInterface is an autogenerated mock type for the LoggerFacadeInterface type
type LoggerFacadeInterface struct {
	mock.Mock
}

// Debug provides a mock function with given fields: msg, fields
func (_m *LoggerFacadeInterface) Debug(msg string, fields ...facades.Field) {
	_va := make([]interface{}, len(fields))
	for _i := range fields {
		_va[_i] = fields[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, msg)
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

// Error provides a mock function with given fields: msg, fields
func (_m *LoggerFacadeInterface) Error(msg string, fields ...facades.Field) {
	_va := make([]interface{}, len(fields))
	for _i := range fields {
		_va[_i] = fields[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, msg)
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

// Info provides a mock function with given fields: msg, fields
func (_m *LoggerFacadeInterface) Info(msg string, fields ...facades.Field) {
	_va := make([]interface{}, len(fields))
	for _i := range fields {
		_va[_i] = fields[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, msg)
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

// NewLoggerFacadeInterface creates a new instance of LoggerFacadeInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLoggerFacadeInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *LoggerFacadeInterface {
	mock := &LoggerFacadeInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
